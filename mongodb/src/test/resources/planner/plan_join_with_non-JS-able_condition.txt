Chain
├─ $FoldLeftF
│  ├─ Chain
│  │  ├─ $ReadF(db; zips)
│  │  ├─ $MatchF
│  │  │  ╰─ Doc
│  │  │     ╰─ CondExpr($loc -> ElemMatch(\/-(Exists(true))))
│  │  ├─ $ProjectF
│  │  │  ├─ Name("0" -> {
│  │  │  │       "$cond": [
│  │  │  │         {
│  │  │  │           "$and": [
│  │  │  │             { "$lte": [{ "$literal": [] }, "$loc"] },
│  │  │  │             { "$lt": ["$loc", { "$literal": BinData(0, "") }] }]
│  │  │  │         },
│  │  │  │         { "$literal": true },
│  │  │  │         { "$literal": false }]
│  │  │  │     })
│  │  │  ├─ Name("src" -> "$$ROOT")
│  │  │  ╰─ ExcludeId
│  │  ├─ $MatchF
│  │  │  ╰─ Doc
│  │  │     ╰─ CondExpr($0 -> Eq(Bool(true)))
│  │  ├─ $ProjectF
│  │  │  ├─ Name("s" -> "$src")
│  │  │  ├─ Name("f" -> "$src.loc")
│  │  │  ╰─ ExcludeId
│  │  ├─ $UnwindF
│  │  │  ╰─ Path(DocField(BsonField.Name("f")))
│  │  ├─ $ProjectF
│  │  │  ├─ Name("left_source" -> "$s")
│  │  │  ├─ Name("left_target_0" -> "$f")
│  │  │  ╰─ ExcludeId
│  │  ├─ $GroupF
│  │  │  ├─ Grouped
│  │  │  │  ╰─ Name("0" -> { "$push": "$$ROOT" })
│  │  │  ╰─ By
│  │  │     ╰─ Name("0" -> "$left_target_0")
│  │  ╰─ $ProjectF
│  │     ├─ Name("_id" -> "$_id")
│  │     ├─ Name("value")
│  │     │  ├─ Name("left" -> "$0")
│  │     │  ├─ Name("right" -> { "$literal": [] })
│  │     │  ╰─ Name("_id" -> "$_id")
│  │     ╰─ IncludeId
│  ╰─ Chain
│     ├─ $ReadF(db; zips)
│     ├─ $MatchF
│     │  ╰─ Doc
│     │     ╰─ CondExpr($loc -> ElemMatch(\/-(Exists(true))))
│     ├─ $ProjectF
│     │  ├─ Name("0" -> {
│     │  │       "$cond": [
│     │  │         {
│     │  │           "$and": [
│     │  │             { "$lte": [{ "$literal": [] }, "$loc"] },
│     │  │             { "$lt": ["$loc", { "$literal": BinData(0, "") }] }]
│     │  │         },
│     │  │         { "$literal": true },
│     │  │         { "$literal": false }]
│     │  │     })
│     │  ├─ Name("src" -> "$$ROOT")
│     │  ╰─ ExcludeId
│     ├─ $MatchF
│     │  ╰─ Doc
│     │     ╰─ CondExpr($0 -> Eq(Bool(true)))
│     ├─ $ProjectF
│     │  ├─ Name("s" -> "$src")
│     │  ├─ Name("f" -> "$src.loc")
│     │  ╰─ ExcludeId
│     ├─ $UnwindF
│     │  ╰─ Path(DocField(BsonField.Name("f")))
│     ├─ $ProjectF
│     │  ├─ Name("right_source" -> "$s")
│     │  ├─ Name("right_target_0" -> "$f")
│     │  ╰─ ExcludeId
│     ├─ $MapF
│     │  ├─ JavaScript(function (key, value) { return [{ "0": value.right_target_0 }, { "left": [], "right": [value] }] })
│     │  ╰─ Scope(ListMap())
│     ╰─ $ReduceF
│        ├─ JavaScript(function (key, values) {
│        │               var result = { "left": [], "right": [] };
│        │               values.forEach(
│        │                 function (value) {
│        │                   result.left = result.left.concat(value.left);
│        │                   result.right = result.right.concat(value.right)
│        │                 });
│        │               return result
│        │             })
│        ╰─ Scope(ListMap())
├─ $MatchF
│  ╰─ Doc
│     ├─ NotCondExpr($left -> Size(0))
│     ╰─ NotCondExpr($right -> Size(0))
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("right")))
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("left")))
╰─ $ProjectF
   ├─ Name("city1" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$left.left_source"] },
   │             { "$lt": ["$left.left_source", { "$literal": [] }] }]
   │         },
   │         "$left.left_source.city",
   │         { "$literal": undefined }]
   │     })
   ├─ Name("loc" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$left.left_source"] },
   │             { "$lt": ["$left.left_source", { "$literal": [] }] }]
   │         },
   │         "$left.left_source.loc",
   │         { "$literal": undefined }]
   │     })
   ├─ Name("city2" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$right.right_source"] },
   │             { "$lt": ["$right.right_source", { "$literal": [] }] }]
   │         },
   │         "$right.right_source.city",
   │         { "$literal": undefined }]
   │     })
   ├─ Name("pop" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$right.right_source"] },
   │             { "$lt": ["$right.right_source", { "$literal": [] }] }]
   │         },
   │         "$right.right_source.pop",
   │         { "$literal": undefined }]
   │     })
   ╰─ ExcludeId