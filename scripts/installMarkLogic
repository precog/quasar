#!/usr/bin/env bash
set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

ML_VERSION="8.0-5.8"
ML_DEV_URL="https://developer.marklogic.com"
ML_DEV_LOGIN="${ML_DEV_URL}/login"
ML_DEV_GET_TOKEN="${ML_DEV_URL}/get-download-url"
ML_DEV_COOKIES=".ml-dev-cookies"

ML_ASSET_PATH="/download/binaries/8.0/MarkLogic-RHEL6-${ML_VERSION}.x86_64.rpm"
ML_DOWNLOAD_EMAIL="quasarci@slamdata.com"
ML_DOWNLOAD_PASSWORD="quasarci"

ML_DIR="scripts/marklogic"
ML_DOCKERFILE="$ML_DIR/Dockerfile"
ML_DOCKER_DIR="$ML_DIR/docker"
ML_RPM_SHA1="$ML_DIR/MarkLogic.rpm.sha1"
ML_RPM_PATH="$ML_DOCKER_DIR/MarkLogic.rpm"
ML_IMG_NAME="marklogic:${ML_VERSION}"
ML_CNT_NAME="ml8"

ML_ADMIN_PREFIX="http://localhost:8001/admin/v1"
ML_MANAGE_PREFIX="http://localhost:8002/manage/v2"
ML_USERNAME="marklogic"
ML_PASSWORD="marklogic"

verify_asset () {
  sha1sum --status -c $ML_RPM_SHA1
  echo "$?"
}

# Create the docker build dir
mkdir -p $ML_DOCKER_DIR

# Copy the dockerfile into it
cp $ML_DOCKERFILE $ML_DOCKER_DIR

if [[ ! -f $ML_RPM_PATH || $(verify_asset) != "0" ]]; then
  # Login to developer.marklogic.com
  curl -X POST --data "email=${ML_DOWNLOAD_EMAIL}&password=${ML_DOWNLOAD_PASSWORD}" -c $ML_DEV_COOKIES $ML_DEV_LOGIN

  # Obtain a download URL
  ML_DOWNLOAD_PATH="$(curl -X POST --data "download=$ML_ASSET_PATH" -b $ML_DEV_COOKIES $ML_DEV_GET_TOKEN | jq -r '.path')"

  # Fetch the MarkLogic binary
  curl -o $ML_RPM_PATH "${ML_DEV_URL}${ML_DOWNLOAD_PATH}"

  # Ensure checksum matches
  if [[ $(verify_asset) != "0" ]]; then
    echo "ERROR: Invalid checksum for $ML_RPM_PATH"
    exit 1
  fi
fi

# Build the docker image
docker build --rm=true --tag $ML_IMG_NAME $ML_DOCKER_DIR

# Start the MarkLogic container
docker run -d --name $ML_CNT_NAME -p 8000-8002:8000-8002 $ML_IMG_NAME

# Allow the server to start
sleep 20

# Initialize the server with the license info
curl --anyauth -i -X POST -d "" ${ML_ADMIN_PREFIX}/init

# Allow the server to restart
sleep 20

# Add the admin user
curl -i -X POST --data "admin-username=${ML_USERNAME}&admin-password=${ML_PASSWORD}" ${ML_ADMIN_PREFIX}/instance-admin

# Allow the server to restart
sleep 20

# Adjust memory settings
curl -i -X PUT --anyauth -u "${ML_USERNAME}:${ML_PASSWORD}" -H "Content-Type: application/json" --data-raw '{"in-memory-list-size": 64, "in-memory-tree-size": 64}' ${ML_MANAGE_PREFIX}/databases/Documents/properties
