Chain
├─ $ReadF(db; foo)
├─ $MatchF
│  ╰─ Doc
│     ╰─ CondExpr($id -> Exists(true))
├─ $ProjectF
│  ├─ Name("left" -> "$$ROOT")
│  ╰─ ExcludeId
├─ $LookupF(from bar with (this).left.id = (that).foo_id as right)
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("right")))
├─ $MatchF
│  ╰─ Doc
│     ╰─ CondExpr($right -> Type(Doc))
├─ $ProjectF
│  ├─ Name("0" -> {
│  │       "$cond": [
│  │         {
│  │           "$and": [
│  │             { "$lte": [{ "$literal": {  } }, "$right"] },
│  │             { "$lt": ["$right", { "$literal": [] }] }]
│  │         },
│  │         { "$literal": true },
│  │         { "$literal": false }]
│  │     })
│  ├─ Name("src")
│  │  ├─ Name("left" -> "$left")
│  │  ╰─ Name("right" -> "$right")
│  ╰─ ExcludeId
├─ $MatchF
│  ╰─ Doc
│     ├─ CondExpr($0 -> Eq(Bool(true)))
│     ╰─ CondExpr($src.right.id -> Exists(true))
├─ $ProjectF
│  ├─ Name("left" -> "$src")
│  ╰─ ExcludeId
├─ $LookupF(from baz with (this).left.right.id = (that).bar_id as right)
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("right")))
╰─ $ProjectF
   ├─ Name("name" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$left.left"] },
   │             { "$lt": ["$left.left", { "$literal": [] }] }]
   │         },
   │         "$left.left.name",
   │         { "$literal": undefined }]
   │     })
   ├─ Name("address" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$left.right"] },
   │             { "$lt": ["$left.right", { "$literal": [] }] }]
   │         },
   │         "$left.right.address",
   │         { "$literal": undefined }]
   │     })
   ├─ Name("zip" -> "$right.zip")
   ╰─ ExcludeId