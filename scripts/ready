#!/bin/bash

set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

# Takes one argument, the name of the wip branch (without "wip/").
# This gets you from a hopefully finished wip branch to a pull request (and
# should be robust to re-running if something goes wrong along the way - test
# failures, merge conflicts, rejected PRs, etc.)

branch=${1:-}
if [[ -z "$branch" ]]; then
    echo "usage: $0 BRANCH"
    exit 1
fi

upstream="upstream/master"
wip="wip/$branch"
ready="ready/$branch"

function count_commits {
    merge_message=" Merge remote-tracking branch 'upstream/master' into $ready"
    git log --oneline $ready ^$1 \
        | grep -v "$merge_message" \
        | wc -l \
        | sed 's/[[:space:]]//g'
}

git fetch --all --prune

if git checkout $ready >/dev/null 2>&1
then
    if [[ -n $(git branch -r --list "origin/$ready") ]]
    then num_commits=$(count_commits "origin/$ready")
    else num_commits=$(count_commits "$upstream")
    fi
else
    git push --set-upstream origin $wip:$wip
    git checkout -b $ready $wip
    num_commits=$(count_commits "$upstream")
fi

if [[ $num_commits -gt 1 ]]
then git rebase -i HEAD~$num_commits
fi

if [[ $num_commits -gt 0 ]]
then
    git merge $upstream
    "$(git rev-parse --show-toplevel)/sbt" scoverage:test it:test
    git push --set-upstream origin $ready:$ready
fi

if command -v terminal-notifier >/dev/null 2>&1
then terminal-notifier \
         -title "SlamData ready script" \
         -message "Time to submit your pull request."
fi

if command -v hub >/dev/null 2>&1
then hub pull-request -o -b master -h $ready
else
    echo "Time to open a pull request!"
    echo "(installing https://hub.github.com will let me open the PR automatically)"
fi
