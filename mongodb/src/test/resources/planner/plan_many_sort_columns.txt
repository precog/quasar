Chain
├─ $ReadF(db; zips)
├─ $ProjectF
│  ├─ Name("0" -> [
│  │       {
│  │         "$cond": [
│  │           {
│  │             "$and": [
│  │               {
│  │                 "$lte": [
│  │                   { "$literal": {  } },
│  │                   {
│  │                     "$arrayElemAt": [["$_id", "$$ROOT"], { "$literal": NumberInt("1") }]
│  │                   }]
│  │               },
│  │               {
│  │                 "$lt": [
│  │                   {
│  │                     "$arrayElemAt": [["$_id", "$$ROOT"], { "$literal": NumberInt("1") }]
│  │                   },
│  │                   { "$literal": [] }]
│  │               }]
│  │           },
│  │           { "$arrayElemAt": [["$_id", "$$ROOT"], { "$literal": NumberInt("1") }] },
│  │           { "$literal": undefined }]
│  │       },
│  │       ["$_id", "$$ROOT"]])
│  ╰─ ExcludeId
├─ $SimpleMapF
│  ├─ Map
│  │  ╰─ Obj
│  │     ├─ Key(0: (isObject(_["0"][1][1]) && (! Array.isArray(_["0"][1][1]))) ? _["0"][1][1].pop : undefined)
│  │     ├─ Key(1: (isObject(_["0"][1][1]) && (! Array.isArray(_["0"][1][1]))) ? _["0"][1][1].state : undefined)
│  │     ├─ Key(2: (isObject(_["0"][1][1]) && (! Array.isArray(_["0"][1][1]))) ? _["0"][1][1].city : undefined)
│  │     ├─ Key(3: (isObject(_["0"][1][1]) && (! Array.isArray(_["0"][1][1]))) ? _["0"][1][1].a4 : undefined)
│  │     ├─ Key(4: (isObject(_["0"][1][1]) && (! Array.isArray(_["0"][1][1]))) ? _["0"][1][1].a5 : undefined)
│  │     ├─ Key(5: (isObject(_["0"][1][1]) && (! Array.isArray(_["0"][1][1]))) ? _["0"][1][1].a6 : undefined)
│  │     ╰─ Key(src: _["0"])
│  ╰─ Scope(Map())
├─ $SortF
│  ├─ SortKey(0 -> Ascending)
│  ├─ SortKey(1 -> Ascending)
│  ├─ SortKey(2 -> Ascending)
│  ├─ SortKey(3 -> Ascending)
│  ├─ SortKey(4 -> Ascending)
│  ╰─ SortKey(5 -> Ascending)
╰─ $ProjectF
   ├─ Name("__quasar_mongodb_sigil" -> { "$arrayElemAt": ["$src", { "$literal": NumberInt("0") }] })
   ╰─ ExcludeId