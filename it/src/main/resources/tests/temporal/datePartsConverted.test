{
  "name": "date_part with (virtually) all selectors, after conversion to JS (see #1238)",

  "backends": {
      "mongodb_read_only": "pending",
      "postgresql":        "pending",
      "marklogic_xml":     "pending",
      "spark_local": "skip",
      "spark_hdfs": "skip"
  },

  "data": "../slamengine_commits.data",

  "nb": "`doy` and `week` are missing because we currently have no JS implementation.",
  "ignoreFieldOrder": [ "marklogic_json", "couchbase" ],
  "query": "select
              date_part(\"millennium\", timestamp(commit.committer.date)) as millennium,
              date_part(\"century\", timestamp(commit.committer.date)) as century,
              date_part(\"decade\", timestamp(commit.committer.date)) as decade,
              date_part(\"year\", timestamp(commit.committer.date)) as year,
              date_part(\"quarter\", timestamp(commit.committer.date)) as quarter,
              date_part(\"month\", timestamp(commit.committer.date)) as month,
              date_part(\"day\", timestamp(commit.committer.date)) as dayOfMonth,
              date_part(\"dow\", timestamp(commit.committer.date)) as dayOfWeek,
              date_part(\"isodow\", timestamp(commit.committer.date)) as `dayOfWeek (ISO)`,
              date_part(\"hour\", timestamp(commit.committer.date)) as hour,
              date_part(\"minute\", timestamp(commit.committer.date)) as minute,
              date_part(\"second\", timestamp(commit.committer.date)) as second,
              date_part(\"milliseconds\", timestamp(commit.committer.date)) as millis,
              date_part(\"microseconds\", timestamp(commit.committer.date)) as micros,
              to_string(author.id) as id
              from `../slamengine_commits`",

  "predicate": "containsAtLeast",

  "expected": [
    {
    "millennium": 3.0, "century": 21.0, "decade": 201.0, "year": 2015.0,
    "quarter": 1.0, "month": 1.0, "dayOfMonth": 29.0, "dayOfWeek": 4.0, "dayOfWeek (ISO)": 4.0,
    "hour": 15.0, "minute": 52.0, "second": 37.0, "millis": 37000.0, "micros": 3.7e7,
    "id": "33031"
    }
  ]
}
