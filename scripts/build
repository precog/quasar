#!/usr/bin/env bash

set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

#
# This script is intended to be run by continuous integration tools, allowing
# actual details of the build and test process to change without having to
# update CI configuration.
#

source "$(dirname $0)/constants"

echo "Script Path:   $SCRIPT_DIR"
echo "Root Path:     $WS_DIR"
echo "Temp Path:     $TEMP_DIR"
echo "Version:       $QUASAR_VERSION"
echo "Web Jar:       $QUASAR_WEB_JAR"
echo "Web Jar Dir:   $QUASAR_WEB_JAR_DIR"
echo "Web Jar Path:  $QUASAR_WEB_JAR_PATH"
echo "REPL Jar:      $QUASAR_REPL_JAR"
echo "REPL Jar Dir:  $QUASAR_REPL_JAR_DIR"
echo "REPL Jar Path: $QUASAR_REPL_JAR_PATH"

QUASAR_TEMP_JAR="$TEMP_DIR/$QUASAR_WEB_JAR"

QUASAR_MONGODB_TESTDB="quasar-test"
QUASAR_MONGODB_HOST_2_6="localhost:27018"
QUASAR_MONGODB_HOST_3_0="localhost:27019"
QUASAR_MONGODB_HOST_3_2="localhost:27020"

JOB_NUM=${TRAVIS_JOB_NUMBER:="1"}

# Enables running tests for a single mongo release by specifying an argument of
# "2_6", "3_0", or "3_2" for the MongoDB 2.6.x, 3.0.x, and 3.2.x releases.
if [[ "$#" == "1" ]]; then
  QUASAR_MONGODB_RELEASE="$1"
else
  QUASAR_MONGODB_RELEASE="ALL"
fi

# Perform setup for integration tests:
if [[ ${LOCAL_MONGODB:-} == "true" ]] ; then
  export QUASAR_TEST_PATH_PREFIX="/${QUASAR_MONGODB_TESTDB}/"

  if [[ "$QUASAR_MONGODB_RELEASE" == "2_6" ]]; then
    export QUASAR_MONGODB_2_6="{\"mongodb\": {\"connectionUri\": \"mongodb://${QUASAR_MONGODB_HOST_2_6}\"}}"
  elif [[ "$QUASAR_MONGODB_RELEASE" == "3_0" ]]; then
    export QUASAR_MONGODB_3_0="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-dbOwner:quasar@${QUASAR_MONGODB_HOST_3_0}/${QUASAR_MONGODB_TESTDB}\"}}"
  elif [[ "$QUASAR_MONGODB_RELEASE" == "3_0_RO" ]]; then
    export QUASAR_MONGODB_READ_ONLY="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-read:quasar@${QUASAR_MONGODB_HOST_3_0}/${QUASAR_MONGODB_TESTDB}\"}}"
    export QUASAR_MONGODB_READ_ONLY_INSERT="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-dbOwner:quasar@${QUASAR_MONGODB_HOST_3_0}/${QUASAR_MONGODB_TESTDB}\"}}"
  elif [[ "$QUASAR_MONGODB_RELEASE" == "3_2" ]]; then
    export QUASAR_MONGODB_3_2="{\"mongodb\": {\"connectionUri\": \"mongodb://${QUASAR_MONGODB_HOST_3_2}/${QUASAR_MONGODB_TESTDB}\"}}"
  else
    export QUASAR_MONGODB_2_6="{\"mongodb\": {\"connectionUri\": \"mongodb://${QUASAR_MONGODB_HOST_2_6}\"}}"
    export QUASAR_MONGODB_3_0="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-dbOwner:quasar@${QUASAR_MONGODB_HOST_3_0}/${QUASAR_MONGODB_TESTDB}\"}}"
    export QUASAR_MONGODB_READ_ONLY="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-read:quasar@${QUASAR_MONGODB_HOST_3_0}/${QUASAR_MONGODB_TESTDB}\"}}"
    export QUASAR_MONGODB_READ_ONLY_INSERT="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-dbOwner:quasar@${QUASAR_MONGODB_HOST_3_0}/${QUASAR_MONGODB_TESTDB}\"}}"
    export QUASAR_MONGODB_3_2="{\"mongodb\": {\"connectionUri\": \"mongodb://quasar-dbOwner:quasar@${QUASAR_MONGODB_HOST_3_2}/${QUASAR_MONGODB_TESTDB}\"}}"
  fi

  echo "Using local MongoDB config"
fi

if [[ "${JOB_NUM##*.}" == "1" ]]; then
  rm -rf "$TEMP_DIR"
  mkdir -p "$TEMP_DIR"

  # Build the pristine JAR without coverage:
  # We cannot do this at the end is because it would require us to clean the project
  # which would remove the coverage information that Jenkins expects to find in the workspace after the build
  "$SBT" clean oneJar

  # Save a copy of the "clean" oneJar, since running code coverage
  # will produce a "dirty" version:
  cp "$QUASAR_WEB_JAR_PATH" "$QUASAR_TEMP_JAR"

  # Build and run all tests everywhere (including integration)
  "$SBT" -DisCoverageRun=true -DisIsolatedEnv=${ISOLATED_ENV:=false} coverage doc test exclusive:test
  "$SBT" coverageReport
  "$SBT" coverageAggregate

  # Build completed, copy oneJar to right location:
  mkdir -p $QUASAR_WEB_JAR_DIR
  cp $QUASAR_TEMP_JAR $QUASAR_WEB_JAR_PATH

  # Test to ensure the JAR file is valid:
  "$SCRIPT_DIR/testJar"
  TEST_STATUS=$?

  echo "Result of Quasar JAR test: $TEST_STATUS"

  exit $TEST_STATUS
else
  "$SBT" -DisIsolatedEnv=${ISOLATED_ENV:=false} test exclusive:test
fi
