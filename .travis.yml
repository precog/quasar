language: scala
scala: 2.12.4 # this needs to be in sync with Scala version used in .appveyor.yml
jdk: oraclejdk8
dist: trusty
sudo: required

stages:
  - name: clean
    if: NOT type = pull_request
  - name: test
  - name: testjar
    if: type = pull_request
  - name: publish
    # weirdly, we have to add the extra PR check
    if: NOT type = pull_request
  - name: cache cleanup

# this all goes in the test stage
env:
  global:
    - COURSIER_PROGRESS=0
    - SBT=./sbt
    - BUILD_HACK_TIMEOUT=60
    # DISCORD_WEBHOOK_TOKENS
    - secure: "copZbrzCXeRfTx2ZRM6nsM07A4rfQAZ0mqk4R+z6USJhjLHv+KXAN30QN2nIAi9FmLoEX8BZRRpbX36nkc81jverhbS6POaci5UcQLpo8HOX4yR3b/pWqIBlno55K5hC6UCEXAneI/ZThFKwotpME9dw7ww+S+gIyaoDvZc4OUI="
    # ENCRYPTION_PASSWORD
    - secure: "YIfY4y2fR4jMOim40r7m4zIHDXI6sXIk+J8qaPJyfPx/cmDRKs5DfbHddb0Rp7Ny0tnRiwRZDt+pEZvfSiuxCIeQQ6/2vi76Jg1iK2ZMO7ZP2wFg5m2t3T+vRIx9WVBr3JVmI4lPuP9FCNTUmxHIzYgozgZM+KdhticW5k3BABY="
    # GITHUB_ACCESS_TOKEN
    - secure: "Cuba400Wq7DxPe/1fXWlgI/aS3oXTj64jQJY588dQZ84wLDnTNbdP4SgZMcGJgzVs4f14PTIGTkK5xJ6WjNLIrUVxBhsB5sRRlX/oMkTVo3ALl/+/q6XXzG6JFuzc2lOHAiryuqQ4ndVNbwSmm5u9u/Krgl2lUlrDqKhhq6LdJI="
    # GITHUB_TOKEN
    - secure: "lH3uaFqFM+4fXAQiF+cQ6eo89HI4Vc7QuIaVUuA7xcVTkPy52cWg6ivrX1ZIG1HQXo5UOFEJDxPmGyeobF/8BrcgacigvEbiHkVhiXzRnWtpZYEPFac3cUmnKd8VRgYA68gXX3pBuF29v+v91MmznDiuBkfKn8r7z/sTykUdHV4="

before_script:
  # confirm we are using travis' premium VMs
  - nproc 2>/dev/null && python -c 'import multiprocessing;print multiprocessing.cpu_count()'
  - free && cat /proc/meminfo

# this is also the test stage :eyeroll:
script:
  - set -e

  - travis_wait 30 scripts/s3Cache cleanup

  # Stop some running services
  - sudo /etc/init.d/postgresql stop
  - sudo /etc/init.d/mysql stop
  - sudo service memcached stop

  - |-
    ./sbt -DisIsolatedEnv=${ISOLATED_ENV:=false} ++$TRAVIS_SCALA_VERSION \
      checkHeaders \
      "test -- failtrace" \
      "exclusive:test -- failtrace"

  - travis_wait 30 scripts/s3Cache upload

  - set +e

jobs:
  include:
    - stage: clean
      env:
      script:
        - travis_wait 30 ./scripts/s3Cache cacheCleanUp
        - ./sbt -DisIsolatedEnv=${ISOLATED_ENV:=false} clean

    - stage: testjar
      env:
      script:
        - set -e

        - travis_wait 30 scripts/s3Cache download

        - './sbt -DisIsolatedEnv=${ISOLATED_ENV:=false} ++$TRAVIS_SCALA_VERSION doc repl/assembly'

        - scripts/testJar

        - set +e

    - stage: publish
      env:
      script:
        - set -e

        - travis_wait 30 scripts/s3Cache download

        - './sbt -DisIsolatedEnv=${ISOLATED_ENV:=false} ++$TRAVIS_SCALA_VERSION doc repl/assembly'

        - scripts/testJar

        # release to sonatype
        - scripts/quasarPublishAndTag

        - set +e

    - stage: cache cleanup
      env:
      script:
        - travis_wait 30 scripts/s3Cache cleanup

notifications:
  irc:
    template:
      - "%{result}: %{repository_slug}#%{build_number} (%{branch}@%{commit}: %{author})
        %{build_url}"
  slack:
    secure: k7tat0w0CSokOD1K0nfPhFY9Z3xkYHXboNlW1WgNAjqtq56hQsfQWhN8z6cXRAs/CgT8ME0K//wDN/HgdG91/aVh1smv/hxMa6P/o70GclhvUkB4iTis3kv9la3Kf2w3K5pbWJ6fFLdAZqc5i9XpQ8q+d7UTgwAxj1ZcYwaCSVo=

after_success:
  - scripts/discordTravisPost success https://discordapp.com/api/webhooks/$DISCORD_WEBHOOK_TOKENS

after_failure:
  - scripts/discordTravisPost failure https://discordapp.com/api/webhooks/$DISCORD_WEBHOOK_TOKENS

branches:
  only:
    - master
    - next-major
    - /^backport.*$/

cache:
  directories:
    - $HOME/.coursier/cache
    - $HOME/.ivy2/cache
    - $HOME/.sbt

before_cache:
  - find "$HOME/.sbt/" -name '*.lock' -print0 | xargs -0 rm
  - find "$HOME/.ivy2/" -name 'ivydata-*.properties' -print0 | xargs -0 rm
