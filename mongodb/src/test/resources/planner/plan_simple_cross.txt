Chain
├─ $FoldLeftF
│  ├─ Chain
│  │  ├─ $ReadF(db; smallZips)
│  │  ├─ $MatchF
│  │  │  ╰─ Or
│  │  │     ├─ Doc
│  │  │     │  ╰─ CondExpr($pop -> Type(Int32))
│  │  │     ├─ Doc
│  │  │     │  ╰─ CondExpr($pop -> Type(Int64))
│  │  │     ├─ Doc
│  │  │     │  ╰─ CondExpr($pop -> Type(Dec))
│  │  │     ├─ Doc
│  │  │     │  ╰─ CondExpr($pop -> Type(Text))
│  │  │     ├─ Doc
│  │  │     │  ╰─ CondExpr($pop -> Type(Date))
│  │  │     ╰─ Doc
│  │  │        ╰─ CondExpr($pop -> Type(Bool))
│  │  ├─ $ProjectF
│  │  │  ├─ Name("0" -> {
│  │  │  │       "$cond": [
│  │  │  │         {
│  │  │  │           "$or": [
│  │  │  │             {
│  │  │  │               "$or": [
│  │  │  │                 {
│  │  │  │                   "$and": [
│  │  │  │                     { "$lt": [{ "$literal": null }, "$pop"] },
│  │  │  │                     { "$lt": ["$pop", { "$literal": {  } }] }]
│  │  │  │                 },
│  │  │  │                 {
│  │  │  │                   "$and": [
│  │  │  │                     {
│  │  │  │                       "$lte": [
│  │  │  │                         { "$literal": ISODate("-292275055-05-16T16:47:04.192Z") },
│  │  │  │                         "$pop"]
│  │  │  │                     },
│  │  │  │                     { "$lt": ["$pop", { "$literal": Timestamp(-2147483648, 0) }] }]
│  │  │  │                 }]
│  │  │  │             },
│  │  │  │             {
│  │  │  │               "$and": [
│  │  │  │                 { "$lte": [{ "$literal": false }, "$pop"] },
│  │  │  │                 { "$lte": ["$pop", { "$literal": true }] }]
│  │  │  │             }]
│  │  │  │         },
│  │  │  │         { "$literal": true },
│  │  │  │         { "$literal": false }]
│  │  │  │     })
│  │  │  ├─ Name("src" -> "$$ROOT")
│  │  │  ╰─ ExcludeId
│  │  ├─ $MatchF
│  │  │  ╰─ Doc
│  │  │     ╰─ CondExpr($0 -> Eq(Bool(true)))
│  │  ├─ $GroupF
│  │  │  ├─ Grouped
│  │  │  │  ╰─ Name("0" -> { "$push": "$src" })
│  │  │  ╰─ By({ "$literal": null })
│  │  ╰─ $ProjectF
│  │     ├─ Name("_id" -> "$_id")
│  │     ├─ Name("value")
│  │     │  ├─ Name("left" -> "$0")
│  │     │  ├─ Name("right" -> { "$literal": [] })
│  │     │  ╰─ Name("_id" -> "$_id")
│  │     ╰─ IncludeId
│  ╰─ Chain
│     ├─ $ReadF(db; extraSmallZips)
│     ├─ $MatchF
│     │  ╰─ Or
│     │     ├─ Doc
│     │     │  ╰─ CondExpr($pop -> Type(Int32))
│     │     ├─ Doc
│     │     │  ╰─ CondExpr($pop -> Type(Int64))
│     │     ├─ Doc
│     │     │  ╰─ CondExpr($pop -> Type(Dec))
│     │     ├─ Doc
│     │     │  ╰─ CondExpr($pop -> Type(Text))
│     │     ├─ Doc
│     │     │  ╰─ CondExpr($pop -> Type(Date))
│     │     ╰─ Doc
│     │        ╰─ CondExpr($pop -> Type(Bool))
│     ├─ $ProjectF
│     │  ├─ Name("0" -> {
│     │  │       "$cond": [
│     │  │         {
│     │  │           "$or": [
│     │  │             {
│     │  │               "$or": [
│     │  │                 {
│     │  │                   "$and": [
│     │  │                     { "$lt": [{ "$literal": null }, "$pop"] },
│     │  │                     { "$lt": ["$pop", { "$literal": {  } }] }]
│     │  │                 },
│     │  │                 {
│     │  │                   "$and": [
│     │  │                     {
│     │  │                       "$lte": [
│     │  │                         { "$literal": ISODate("-292275055-05-16T16:47:04.192Z") },
│     │  │                         "$pop"]
│     │  │                     },
│     │  │                     { "$lt": ["$pop", { "$literal": Timestamp(-2147483648, 0) }] }]
│     │  │                 }]
│     │  │             },
│     │  │             {
│     │  │               "$and": [
│     │  │                 { "$lte": [{ "$literal": false }, "$pop"] },
│     │  │                 { "$lte": ["$pop", { "$literal": true }] }]
│     │  │             }]
│     │  │         },
│     │  │         { "$literal": true },
│     │  │         { "$literal": false }]
│     │  │     })
│     │  ├─ Name("src" -> "$$ROOT")
│     │  ╰─ ExcludeId
│     ├─ $MatchF
│     │  ╰─ Doc
│     │     ╰─ CondExpr($0 -> Eq(Bool(true)))
│     ├─ $GroupF
│     │  ├─ Grouped
│     │  │  ╰─ Name("0" -> { "$push": "$src" })
│     │  ╰─ By({ "$literal": null })
│     ├─ $ProjectF
│     │  ├─ Name("right" -> "$0")
│     │  ├─ Name("left" -> { "$literal": [] })
│     │  ├─ Name("_id" -> true)
│     │  ╰─ IncludeId
│     ╰─ $ReduceF
│        ├─ JavaScript(function (key, values) {
│        │               var result = { "left": [], "right": [] };
│        │               values.forEach(
│        │                 function (value) {
│        │                   result.left = result.left.concat(value.left);
│        │                   result.right = result.right.concat(value.right)
│        │                 });
│        │               return result
│        │             })
│        ╰─ Scope(ListMap())
├─ $MatchF
│  ╰─ Doc
│     ├─ NotCondExpr($left -> Size(0))
│     ╰─ NotCondExpr($right -> Size(0))
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("right")))
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("left")))
├─ $ProjectF
│  ├─ Name("0" -> { "$lt": ["$left.pop", "$right.pop"] })
│  ├─ Name("src")
│  │  ╰─ Name("right" -> "$right")
│  ╰─ ExcludeId
├─ $MatchF
│  ╰─ Doc
│     ╰─ CondExpr($0 -> Eq(Bool(true)))
╰─ $ProjectF
   ├─ Name("__quasar_mongodb_sigil" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lte": [{ "$literal": {  } }, "$src.right"] },
   │             { "$lt": ["$src.right", { "$literal": [] }] }]
   │         },
   │         "$src.right.city",
   │         { "$literal": undefined }]
   │     })
   ╰─ ExcludeId