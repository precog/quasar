Chain
├─ $ReadF(db; zips)
├─ $MatchF
│  ╰─ And
│     ├─ Or
│     │  ├─ Doc
│     │  │  ╰─ Expr($pop -> Type(Int32))
│     │  ├─ Doc
│     │  │  ╰─ Expr($pop -> Type(Int64))
│     │  ├─ Doc
│     │  │  ╰─ Expr($pop -> Type(Dec))
│     │  ├─ Doc
│     │  │  ╰─ Expr($pop -> Type(Text))
│     │  ├─ Doc
│     │  │  ╰─ Expr($pop -> Type(Date))
│     │  ╰─ Doc
│     │     ╰─ Expr($pop -> Type(Bool))
│     ╰─ Doc
│        ╰─ Expr($pop -> Gte(Int32(1000)))
├─ $ProjectF
│  ├─ Name("0" -> {
│  │       "$cond": [
│  │         {
│  │           "$and": [
│  │             { "$lt": [{ "$literal": null }, "$pop"] },
│  │             { "$lt": ["$pop", { "$literal": "" }] }]
│  │         },
│  │         {
│  │           "$cond": [
│  │             {
│  │               "$eq": [{ "$literal": NumberInt("1000") }, { "$literal": NumberInt("0") }]
│  │             },
│  │             {
│  │               "$cond": [
│  │                 { "$eq": ["$pop", { "$literal": NumberInt("0") }] },
│  │                 { "$literal": NaN },
│  │                 {
│  │                   "$cond": [
│  │                     { "$gt": ["$pop", { "$literal": NumberInt("0") }] },
│  │                     { "$literal": Infinity },
│  │                     { "$literal": -Infinity }]
│  │                 }]
│  │             },
│  │             { "$divide": ["$pop", { "$literal": NumberInt("1000") }] }]
│  │         },
│  │         { "$literal": undefined }]
│  │     })
│  ├─ Name("src" -> "$$ROOT")
│  ╰─ ExcludeId
├─ $SortF
│  ╰─ SortKey(0 -> Ascending)
╰─ $ProjectF
   ├─ Name("popInK" -> {
   │       "$cond": [
   │         {
   │           "$and": [
   │             { "$lt": [{ "$literal": null }, "$src.pop"] },
   │             { "$lt": ["$src.pop", { "$literal": "" }] }]
   │         },
   │         {
   │           "$cond": [
   │             {
   │               "$eq": [{ "$literal": NumberInt("1000") }, { "$literal": NumberInt("0") }]
   │             },
   │             {
   │               "$cond": [
   │                 { "$eq": ["$src.pop", { "$literal": NumberInt("0") }] },
   │                 { "$literal": NaN },
   │                 {
   │                   "$cond": [
   │                     { "$gt": ["$src.pop", { "$literal": NumberInt("0") }] },
   │                     { "$literal": Infinity },
   │                     { "$literal": -Infinity }]
   │                 }]
   │             },
   │             { "$divide": ["$src.pop", { "$literal": NumberInt("1000") }] }]
   │         },
   │         { "$literal": undefined }]
   │     })
   ╰─ ExcludeId