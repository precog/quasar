Chain
├─ $ReadF(db; largeZips)
├─ $MatchF
│  ╰─ Doc
│     ╰─ CondExpr($TestProgramId -> Exists(true))
├─ $ProjectF
│  ├─ Name("right" -> "$$ROOT")
│  ╰─ ExcludeId
├─ $LookupF(from zips with (this).right.TestProgramId = (that)._id as left)
├─ $UnwindF
│  ╰─ Path(DocField(BsonField.Name("left")))
├─ $ProjectF
│  ├─ Name("left" -> "$left")
│  ├─ Name("right" -> "$right")
│  ╰─ ExcludeId
├─ $SimpleMapF
│  ├─ Map
│  │  ╰─ Obj
│  │     ├─ Key(f0: (isObject(_.left) && (! Array.isArray(_.left))) ? _.left._id : undefined)
│  │     ╰─ Key(b0: (isObject(_.left) && (! Array.isArray(_.left))) ? _.left._id : undefined)
│  ╰─ Scope(ListMap())
╰─ $GroupF
   ├─ Grouped
   │  ├─ Name("_id" -> { "$first": "$f0" })
   │  ╰─ Name("1" -> { "$sum": { "$literal": NumberInt("1") } })
   ╰─ By
      ╰─ Name("0" -> "$b0")