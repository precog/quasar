#!/bin/bash
#
# This script is intended to be run by continuous integration tools, allowing 
# actual details of the build and test process to change without having to 
# update CI configuration.
#

source "$(dirname $0)/constants"

echo "Script Path:  $SCRIPT_DIR"
echo "Root Path:    $WS_DIR"
echo "Temp Path:    $TEMP_DIR"
echo "Version:      $SLAM_VERSION"
echo "Web Jar:      $SLAM_WEB_JAR"
echo "Web Jar Dir:  $SLAM_WEB_JAR_DIR"
echo "Web Jar Path: $SLAM_WEB_JAR_PATH"

if [[ "$TRAVIS_BUILD" == "true" ]] ; then 
  echo "Travis detected, using local MongoDB config"

  export SLAMDATA_MONGODB='{"mongodb":{"database": "test", "connectionUri": "mongodb://127.0.0.1"}}'

  # TODO: Move to code
  echo "Importing zips data set for integration tests"

  mongoimport --db test --collection zips --file "$WS_DIR/it/src/test/resources/tests/zips.data"
fi 

SLAM_TEMP_JAR="$TEMP_DIR/$SLAM_WEB_JAR"

rm -rf "$TEMP_DIR"
mkdir -p "$TEMP_DIR"

# Build the pristine JAR without coverage:
"$SBT" clean oneJar

# Save a copy of the "clean" oneJar, since running code coverage 
# will produce a "dirty" version:
cp "$SLAM_WEB_JAR_PATH" "$SLAM_TEMP_JAR"

# Build and run all tests everywhere (including integration)
"$SBT" -DisCoverageRun=true coverage test

# # Code coverage
if [ "$TRAVIS_BUILD" = "true" ] ; then
  # coveralls
  "$SBT" coverageAggregate 
else
  "$SBT" coverageAggregate
fi

# Build completed, copy oneJar to right location:
mkdir -p $SLAM_WEB_JAR_DIR
cp $SLAM_TEMP_JAR $SLAM_WEB_JAR_PATH 

# Test to ensure the JAR file is valid:
"$SCRIPT_DIR/testJar"
TEST_STATUS=$?

echo "Result of SlamData JAR test: $TEST_STATUS"

exit $TEST_STATUS
